
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE EQUALS LBRACE LPAREN MINUS NAME NUMBER PLUS RBRACE RPAREN SEMICOLON TIMESstatement : NAME EQUALS expression SEMICOLONstatement : expression SEMICOLONexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression TIMES expression\n                      | expression DIVIDE expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,7,9,10,11,12,],[2,14,14,14,14,14,14,14,]),'MINUS':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,],[4,-10,10,4,4,-9,4,4,4,4,4,-7,-10,10,10,-3,-4,-5,-6,-8,]),'LPAREN':([0,4,5,7,9,10,11,12,],[5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,7,9,10,11,12,],[6,6,6,6,6,6,6,6,]),'$end':([1,8,22,],[0,-2,-1,]),'EQUALS':([2,],[7,]),'SEMICOLON':([2,3,6,13,14,16,17,18,19,20,21,],[-10,8,-9,-7,-10,22,-3,-4,-5,-6,-8,]),'PLUS':([2,3,6,13,14,15,16,17,18,19,20,21,],[-10,9,-9,-7,-10,9,9,-3,-4,-5,-6,-8,]),'TIMES':([2,3,6,13,14,15,16,17,18,19,20,21,],[-10,11,-9,-7,-10,11,11,11,11,-5,-6,-8,]),'DIVIDE':([2,3,6,13,14,15,16,17,18,19,20,21,],[-10,12,-9,-7,-10,12,12,12,12,-5,-6,-8,]),'RPAREN':([6,13,14,15,17,18,19,20,21,],[-9,-7,-10,21,-3,-4,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,7,9,10,11,12,],[3,13,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression SEMICOLON','statement',4,'p_statement_assign','c_parser.py',14),
  ('statement -> expression SEMICOLON','statement',2,'p_statement_expr','c_parser.py',18),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','c_parser.py',22),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','c_parser.py',23),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','c_parser.py',24),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','c_parser.py',25),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','c_parser.py',29),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','c_parser.py',33),
  ('expression -> NUMBER','expression',1,'p_expression_number','c_parser.py',37),
  ('expression -> NAME','expression',1,'p_expression_name','c_parser.py',41),
]
